version: '3'
services:
  mysql:
    container_name: mysql
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: docker-train-db
      MYSQL_ROOT_PASSWORD: Aa1234567
      MYSQL_ROOT_HOST: '%'
    ports:
      - "33061:3306"
    volumes:
      - "./MysqlConfiguration/db:/var/lib/mysql"
    networks: 
      - aws-train-backend
  backend:
    container_name: backend
    restart: always
    image: lizeyang1995/docker-train-backend:2.0
    ports:
      - "8080:8080"
    depends_on: 
      - mysql
      - redis
    networks: 
      - aws-train-backend
      - aws-train-front
  redis:
    container_name: redis
    build:
      context: ./RedisConfiguration
      dockerfile: ./RedisConfiguration/Dockerfile
    ports:
        - "63791:6379"
    volumes:
        - "./RedisConfiguration/data:/data"
        - "./RedisConfiguration/redis/redis.conf:/etc/redis/redis.conf"
    restart: always
    command: redis-server /etc/redis/redis.conf
    networks: 
      - aws-train-backend
  nginx:
    container_name: nginx
    image: nginx:1.13
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./NginxConfiguration/conf.d:/etc/nginx/conf.d
    networks:
      - aws-train-front
networks:
    aws-train-front:
      driver: bridge
    aws-train-backend:
      driver: bridge